{"version":3,"file":"main.js","mappings":"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","sources":["webpack://f1_standings_explorer/./src/scripts/constants.js","webpack://f1_standings_explorer/./src/scripts/utils.js","webpack://f1_standings_explorer/./node_modules/@kurkle/color/dist/color.esm.js","webpack://f1_standings_explorer/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://f1_standings_explorer/./node_modules/chart.js/dist/chart.js","webpack://f1_standings_explorer/./node_modules/chart.js/auto/auto.js","webpack://f1_standings_explorer/./src/scripts/table-functions.js","webpack://f1_standings_explorer/./src/scripts/state-manager.js","webpack://f1_standings_explorer/./src/index.js","webpack://f1_standings_explorer/./src/scripts/parsing-functions.js","webpack://f1_standings_explorer/./src/scripts/chart-functions.js"],"sourcesContent":["export const grandPrixAbbreviations = {\n  \"Bahrain Grand Prix\": \"BHR\",\n  \"Emilia Romagna Grand Prix\": \"EMI\",\n  \"Portuguese Grand Prix\": \"POR\",\n  \"Spanish Grand Prix\": \"ESP\",\n  \"Monaco Grand Prix\": \"MON\",\n  \"Azerbaijan Grand Prix\": \"AZE\",\n  \"French Grand Prix\": \"FRA\",\n  \"Styrian Grand Prix\": \"STY\",\n  \"Austrian Grand Prix\": \"AUT\",\n  \"British Grand Prix\": \"GBR\",\n  \"Hungarian Grand Prix\": \"HUN\",\n  \"Belgian Grand Prix\": \"BEL\",\n  \"Dutch Grand Prix\": \"NED\",\n  \"Italian Grand Prix\": \"ITA\",\n  \"Russian Grand Prix\": \"RUS\",\n  \"Turkish Grand Prix\": \"TUR\",\n  \"United States Grand Prix\": \"USA\",\n  \"Mexico City Grand Prix\": \"MXC\",\n  \"São Paulo Grand Prix\": \"SAP\",\n  \"Qatar Grand Prix\": \"QAT\",\n  \"Saudi Arabian Grand Prix\": \"SAU\",\n  \"Abu Dhabi Grand Prix\": \"ABU\",\n  \"Australian Grand Prix\": \"AUS\",\n  \"Miami Grand Prix\": \"MIA\",\n  \"Canadian Grand Prix\": \"CAN\",\n  \"Singapore Grand Prix\": \"SIN\",\n  \"Japanese Grand Prix\": \"JPN\",\n  \"Brazilian Grand Prix\": \"SAP\",\n  \"70th Anniversary Grand Prix\": \"70A\",\n  \"Tuscan Grand Prix\": \"TUS\",\n  \"Eifel Grand Prix\": \"EIF\",\n  \"Chinese Grand Prix\": \"CHN\",\n  \"German Grand Prix\": \"GER\",\n  \"Mexican Grand Prix\": \"MEX\",\n  \"Malaysian Grand Prix\": \"MAL\",\n  \"European Grand Prix\": \"EUR\",\n  \"Sakhir Grand Prix\": \"SKH\",\n  \"San Marino Grand Prix\": \"SMR\",\n  \"Korean Grand Prix\": \"KOR\",\n  \"Indian Grand Prix\": \"IND\",\n  \"Las Vegas Grand Prix\": \"LVG\",\n}\n\nexport const localFileSeasons = [2021, 2022];\n\nexport const numberOfSeasons = 24;\n\nexport const championship = {\n  \"drivers\": \"drivers\",\n  \"constructors\": \"constructors\"\n}\n","import * as constants from './constants';\n\nexport function handleCanvas(chart = null) {\n  // Gets canvas and returns the context. Destroys chart if populated.\n  const canvas = document.getElementById(\"graph-canvas\")\n  if (chart) chart.destroy()\n  return canvas.getContext(\"2d\");\n}\n\nexport function getRaceLabels(sortedDrivers) {\n  // Get race labels. A driver may not participate in each race so we iterate\n  // over three of them just to be safe.\n  const uniqueRaces = new Set();\n  for (let i = 0; i < 3; i++) {\n    Object.values(sortedDrivers[i][1]).forEach((raceResult) => {\n      if (raceResult.raceName) {\n        uniqueRaces.add(constants.grandPrixAbbreviations[raceResult.raceName])\n      }\n    })\n  }\n  return Array.from(uniqueRaces);\n}\n\nexport function populateElement(type, text, parent = null, eleClass = null) {\n  /*\n  Takes in an element, populates the text, and optionally adds it to a parent,\n  adds a class, or sets an attribute with a value. Returns the newElement.\n\n  */\n  const newElement = document.createElement(type);\n  newElement.innerHTML = text;\n  if (parent != null) parent.appendChild(newElement);\n  if (eleClass) newElement.classList.add(eleClass);\n  return newElement;\n}\n\nexport function removeAllChildren(elementId) {\n  // Retrieves element by ID and removes all children.\n  const parentElement = document.getElementById(elementId);\n  while (parentElement.firstChild) {\n    parentElement.removeChild(parentElement.firstChild)\n  }\n  return parentElement;\n}\n\nexport function createStartEndDropdown(response, pageManager) {\n  // Generates dropdown options for the start and end date filters.\n  const startDate = removeAllChildren(\"start-date\");\n  const endDate = removeAllChildren(\"end-date\");\n  const races = response.MRData.RaceTable.Races;\n  races.forEach((race) => {\n    const shortName = constants.grandPrixAbbreviations[race.raceName];\n    const optionText = `${shortName} - ${race.date}`;\n    const startOption = populateElement(\"option\", optionText, startDate);\n    startOption.setAttribute(\"value\", race.date);\n    // If statements preserve previously selected option when refreshing.\n    if (race.date === pageManager.startDate) {\n      startOption.setAttribute(\"selected\", true)\n    }\n    const endOption = populateElement(\"option\", optionText, endDate);\n    endOption.setAttribute(\"value\", race.date);\n    if (race.date === pageManager.endDate) {\n      endOption.setAttribute(\"selected\", true)\n    }\n  })\n}\n\nexport function createSeasonSelectDropdown() {\n  /*\n  Creates season selection dropdown options for the last X number of years.\n  Number of years is defined in constants.numberOfSeasons.\n  */\n  const seasonOptions = document.getElementById(\"season\")\n  const today = new Date()\n  const currentYear = today.getFullYear();\n  for (let i = 0; i < constants.numberOfSeasons; i++) {\n    const year = parseInt(currentYear - i);\n    const yearOption = populateElement(\"option\", year, seasonOptions)\n    yearOption.setAttribute(\"value\", year);\n    if (year === 2021) yearOption.setAttribute(\"selected\", true);\n  }\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","// Functions for creating graphs for the season summary view.\nimport * as utils from './utils';\nimport Chart from 'chart.js/auto';\nimport { getRelativePosition } from 'chart.js/helpers';\n\nexport function generateTable(sortedDrivers, raceLabels) {\n  // Setup table layout elements.\n  const table = document.createElement(\"table\");\n  const thead = document.createElement(\"thead\");\n  const header = document.createElement(\"tr\");\n  // Add Position column header.\n  utils.populateElement(\"th\", \"Pos.\", header)\n  // Add Driver column header.\n  utils.populateElement(\"th\", \"Driver\", header)\n  // Add Race abbreviation headers.\n  raceLabels.forEach((raceShortName) => {\n    utils.populateElement(\"th\", raceShortName, header)\n  })\n  // Add Total column header\n  utils.populateElement(\"th\", \"Total\", header)\n  thead.appendChild(header)\n  table.appendChild(thead)\n\n  // Generate driver rows.\n  // Top level iterates over drivers (Y-Axis)\n  const tbody = document.createElement(\"tbody\");\n  // When date filters are applied we need to pull the respective key.\n  const roundStart = parseInt(Object.keys(sortedDrivers[0][1])[0])\n  sortedDrivers.forEach((driver, pos) => {\n    const driverStats = driver[1];\n    const row = document.createElement(\"tr\");\n    // Add position row (1-20).\n    utils.populateElement(\"th\", (pos + 1).toString(), row)\n    // Add driver's name.\n    utils.populateElement(\"td\", driver[0], row, \"driver-name\")\n    // Inner loop iterates over race results (X-Axis).\n    for (let i = roundStart; i < (raceLabels.length + roundStart); i++) {\n      const raceResult = document.createElement(\"td\");\n      raceResult.classList.add(\"data-cell\")\n      // Cell will be empty if a driver didn't participate in a given round.\n      if (i in driverStats) {\n        const finishPos = driverStats[i][\"finishPosition\"];\n        raceResult.innerHTML = finishPos;\n        // Add color to background depending on finish.\n        if (finishPos === \"1\") {\n          raceResult.setAttribute(\"id\", \"gold-cell\");\n        } else if (finishPos === \"2\") {\n          raceResult.setAttribute(\"id\", \"silver-cell\");\n        } else if (finishPos === \"3\") {\n          raceResult.setAttribute(\"id\", \"bronze-cell\");\n        } else if (finishPos <= 10) {\n          raceResult.setAttribute(\"id\", \"points-cell\");\n        } else {\n          raceResult.setAttribute(\"id\", \"no-points-cell\");\n        }\n      }\n      row.appendChild(raceResult);\n    }\n    // Add Total column for given driver.\n    utils.populateElement(\"th\", driverStats.pointsTotal, row)\n    tbody.appendChild(row);\n  })\n  table.appendChild(tbody);\n  table.classList.add(\"results-table\");\n  return table;\n}\n\nexport function generateSeasonSummary(raceLabels, seasonDataset, ctx, callback, title, type = \"line\") {\n  const chart = new Chart(ctx, {\n    type: type,\n    data: { labels: raceLabels, datasets: seasonDataset },\n    options: {\n      onClick: (e) => {\n        const canvasPosition = getRelativePosition(e, chart);\n        const dataX = chart.scales.x.getValueForPixel(canvasPosition.x);\n        const dataY = chart.scales.y.getValueForPixel(canvasPosition.y);\n      },\n      plugins: {\n        legend: {\n          onClick: callback,\n          display: true,\n          position: 'left'\n        },\n        title: {\n          display: true,\n          text: title,\n          font: { size: 24 },\n          padding: { top: 10, bottom: 10 },\n        }\n      }\n    }\n  });\n  return chart;\n}\n\nexport function generateConstructorSummary(raceLabels, constructorDataset, ctx, title) {\n  const chart = new Chart(ctx, {\n    type: 'line',\n    data: { labels: raceLabels, datasets: constructorDataset },\n    options: {\n      onClick: (e) => {\n        const canvasPosition = getRelativePosition(e, chart);\n        const dataX = chart.scales.x.getValueForPixel(canvasPosition.x);\n        const dataY = chart.scales.y.getValueForPixel(canvasPosition.y);\n      },\n      plugins: {\n        legend: {\n          display: true,\n          position: 'left'\n        },\n        title: {\n          display: true,\n          text: title,\n          font: { size: 24 },\n          padding: { top: 10, bottom: 10 },\n        }\n      }\n    }\n  });\n  return chart;\n}\n","// Class to help manage the state of the single-page application.\nimport * as constants from './constants'\nexport class StateManager {\n  constructor() {\n    this.season = 2021;\n    this.currentChart = '';\n    this.startDate = '';\n    this.endDate = '';\n    this.championship = constants.championship.drivers;\n    this.driverView = false;\n    this.driverNum = null;\n    this.driverName = '';\n  }\n\n  championshipToggle(toggleStatus) {\n    if (toggleStatus) {\n      this.championship = constants.championship.constructors;\n    } else {\n      this.championship = constants.championship.drivers;\n    };\n  }\n\n  processDateRange(start, end, matchingOkay = false) {\n    if (start > end) {\n      alert(\"Start date must be before end date.\");\n      return false;\n    }\n    this.startDate = start;\n    this.endDate = end;\n    // If the start and end are the same, reset to empty strings.\n    if (this.startDate === this.endDate && !matchingOkay) {\n      this.startDate = \"\";\n      this.endDate = \"\";\n    }\n    return true;\n  }\n  findDriver(sortedDrivers) {\n    /* Look up driver data by index or driverName if we're already on the driver\n    detail view page */\n    let data;\n    if (this.driverName) {\n      data = sortedDrivers.filter((driver) => driver[0] === this.driverName)[0];\n    } else {\n      data = sortedDrivers[this.driverNum];\n      this.driverName = data[0];\n    }\n    return data\n  }\n  clearDriverView() {\n    this.driverView = false;\n    this.driverNum = null;\n    this.driverName = '';\n  }\n}\n","import * as chartFunctions from './scripts/chart-functions';\nimport * as constants from './scripts/constants';\nimport * as parsingFunctions from './scripts/parsing-functions';\nimport * as tableFunctions from './scripts/table-functions';\nimport { StateManager } from './scripts/state-manager';\nimport * as utils from './scripts/utils';\n\n// Initialize instance of StateManger and select elements for event handling.\nconst pageManager = new StateManager();\nconst filtersForm = document.querySelector(\".data-filters\");\nconst seasonSelection = document.querySelector(\"#season\");\nconst championship = document.querySelector(\"#championship\");\nconst instructionsMenu = document.querySelector(\"#instructions-menu\");\nconst explainerButton = document.getElementById(\"explainer-button\");\nconst explainerModal = document.getElementById(\"explainer-modal\");\nconst explainerClose = document.getElementById(\"explainer-close\");\nconst backToMainButton = document.getElementById(\"back-to-main\");\n\n// Event Handlers.\nconst tableRefresh = e => {\n  // General table refresh.\n  pageManager.season = document.getElementById(\"season\").value\n  pageManager.championshipToggle(document.querySelector('#constructor').checked)\n  populatePage();\n}\n\nconst repopulatePage = e => {\n  // This is the event handler for the submit action.\n  e.preventDefault();\n  pageManager.season = document.getElementById(\"season\").value\n  pageManager.championshipToggle(document.querySelector('#constructor').checked)\n  pageManager.processDateRange(\n    document.getElementById(\"start-date\").value,\n    document.getElementById(\"end-date\").value,\n    true\n  )\n  populatePage();\n}\n\nconst handleDriverClick = (e, legendItem, _) => {\n  // Switches to the Driver Detail View.\n  pageManager.season = document.getElementById(\"season\").value\n  pageManager.processDateRange(\n    document.getElementById(\"start-date\").value,\n    document.getElementById(\"end-date\").value\n  )\n  pageManager.driverNum = legendItem.datasetIndex;\n  pageManager.driverView = true;\n  backToMainButton.style.display = \"block\";\n  populatePage();\n}\n\nconst backToMain = e => {\n  // Resets back to Driver Championship View.\n  pageManager.season = document.getElementById(\"season\").value\n  pageManager.clearDriverView();\n  pageManager.processDateRange(\n    document.getElementById(\"start-date\").value,\n    document.getElementById(\"end-date\").value\n  )\n  backToMainButton.style.display = \"none\";\n  populatePage();\n}\n\nconst toggleShow = e => {\n  // Toggles whether or not the instructions are hidden.\n  const instructionsList = document.getElementById(\"instructions-list\")\n  if (instructionsList.style.display === \"none\") {\n    instructionsList.style.display = \"block\";\n  } else {\n    instructionsList.style.display = \"none\";\n  }\n}\n\n// Main page population function.\nasync function populatePage() {\n  // Load and parse race data from local file or API.\n  let jsonData;\n  if (pageManager.season !== 2023) {\n    jsonData = await JSON.parse(localStorage.getItem(pageManager.season));\n  }\n  // If we're not using cached data, load data from local file or fetch from the API.\n  if (jsonData === null) {\n    if (constants.localFileSeasons.includes(parseInt(pageManager.season))) {\n      console.log(\"Loading from local file.\")\n      jsonData = await parsingFunctions.loadResultsJson(pageManager.season);\n    } else {\n      console.log(\"Fetching from API.\")\n      jsonData = await parsingFunctions.fetchSeasonResults(pageManager.season);\n    }\n    if (pageManager.season !== 2023) {\n      localStorage.setItem(pageManager.season, JSON.stringify(jsonData));\n    }\n  }\n  // Organize data into drivers from highest to lowest points.\n  const sortedDrivers = parsingFunctions.parseSeasonResults(\n    jsonData, pageManager.startDate, pageManager.endDate\n  );\n  const raceLabels = utils.getRaceLabels(sortedDrivers);\n  utils.createStartEndDropdown(jsonData, pageManager);\n  // Render chart depending on which options are enabled.\n  const ctx = utils.handleCanvas(StateManager.currentChart);\n  if (pageManager.driverView) {\n    const singleDriver = pageManager.findDriver(sortedDrivers);\n    StateManager.currentChart = chartFunctions.renderDriverDetail(\n      singleDriver, raceLabels, ctx, backToMain)\n  } else if (pageManager.championship === constants.championship.constructors) {\n    StateManager.currentChart = chartFunctions.renderConstructorsTable(\n      jsonData, pageManager, raceLabels, ctx);\n  } else {\n    StateManager.currentChart = chartFunctions.renderDriversTable(\n      sortedDrivers, pageManager, raceLabels, ctx, handleDriverClick);\n  }\n  // Create Positions Table\n  const table = tableFunctions.generateTable(sortedDrivers, raceLabels);\n  const pointsTable = document.querySelector(\".table-container\");\n  pointsTable.childNodes.forEach(child => child.remove())\n  pointsTable.appendChild(table);\n}\n\n// // Logic to open and close the explainer modal.\nexplainerButton.onclick = function () {\n  explainerModal.style.display = \"block\";\n}\n\n// When the user clicks on <span> (x) or outside of the modal, close the modal\nexplainerClose.onclick = function () {\n  explainerModal.style.display = \"none\";\n}\nwindow.onclick = function (event) {\n  if (event.target == explainerModal) {\n    explainerModal.style.display = \"none\";\n  }\n}\n\n// Event Listeners\nfiltersForm.addEventListener(\"submit\", repopulatePage);\nseasonSelection.addEventListener(\"change\", tableRefresh);\nchampionship.addEventListener(\"change\", tableRefresh);\ninstructionsMenu.addEventListener(\"click\", toggleShow)\nbackToMainButton.addEventListener(\"click\", backToMain);\n\n// Run initial populate page with defaults: season 2021, driver's championship.\npopulatePage();\n// We only need to populate the season dropdown once.\nutils.createSeasonSelectDropdown();\n","// Functions for processing data related to the Season Summary Main View.\nimport * as constants from './constants';\nimport * as utils from './utils';\n\nexport async function fetchSeasonResults(season = 2021) {\n  const url = `https://ergast.com/api/f1/${season}/results.json?limit=500`\n  let result;\n  try {\n    const response = await fetch(\n      url, { headers: { \"Accept\": \"application/json\" } }\n    )\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (errorResponse) {\n    console.error(errorResponse);\n  }\n  return result;\n}\n\nexport async function loadResultsJson(season = 2021) {\n  let result;\n  try {\n    const response = await fetch(`./src/data/results-${season}.json`)\n    if (response.ok) {\n      result = await response.json();\n    } else {\n      throw response;\n    }\n  } catch (errorResponse) {\n    console.error(errorResponse);\n  }\n  return result;\n}\n\nexport function parseSeasonResults(response, startDate, endDate) {\n  /*\n  Takes in the result of calling the full seasons results endpoint. Parses the\n  body into an array that can be used to generate the season summary table.\n  Groups races by driver to determine the total points per driver. Then places\n  drivers into an array sorted from highest to lowest. Race order is preserved.\n\n  response: JSON object\n  seasonResults: an array containing sub-arrays of driver results. Each subarray\n    contains the name of the driver, and a hash object. The hash object contains\n    race results for points, quali position, and finish position.\n  */\n  // This returns an array of races.\n  const races = response.MRData.RaceTable.Races;\n  const drivers = {};\n  races.forEach((race) => {\n    // Apply optional date filters for start and end dates.\n    if (startDate) {\n      const raceDate = new Date(race.date);\n      const startFilter = new Date(startDate);\n      const endFilter = new Date(endDate);\n      if (raceDate.getFullYear() === startFilter.getFullYear()) {\n        if (raceDate < startFilter || raceDate > endFilter) {\n          return;\n        }\n      }\n    }\n    const raceName = race.raceName;\n    const round = race.round;\n    // Update driver object with respective race results.\n    race.Results.forEach((raceResult) => {\n      const first = raceResult.Driver.givenName;\n      const last = raceResult.Driver.familyName;\n      const driver = `${first} ${last}`\n      // Create default entries if they don't exist.\n      if (!drivers[driver]) drivers[driver] = {};\n      if (!drivers[driver][\"pointsTotal\"]) drivers[driver][\"pointsTotal\"] = 0;\n      // We'll use finish and quali in the driver detail view.\n      drivers[driver][\"pointsTotal\"] += parseInt(raceResult.points);\n      drivers[driver][round] = {\n        \"raceName\": raceName,\n        \"points\": raceResult.points,\n        \"finishPosition\": raceResult.position,\n        \"qualiPosition\": raceResult.grid,\n        \"currentPoints\": drivers[driver][\"pointsTotal\"],\n        \"date\": race.date\n      }\n    })\n  })\n  /*\n  Sort drivers by total points. Returns an array with 2 element subarrays. The\n  first element is the driver name and the second element is the full driver\n  results for a given season. Each round is a key for the full race result.\n  */\n  return Object.entries(drivers)\n    .sort(([, raceA], [, raceB]) => raceB.pointsTotal - raceA.pointsTotal);;\n}\n\nexport function generateDatasets(sortedDrivers) {\n  // Generate chart data for the Driver's Championship.\n  const seasonDataset = [];\n  sortedDrivers.forEach((driver) => {\n    const driverData = {\n      label: driver[0].split(' ')[1].slice(0, 3).toUpperCase(),\n      data: Object.values(driver[1]).map((stats) => stats.currentPoints)\n    }\n    seasonDataset.push(driverData);\n  });\n  return seasonDataset;\n}\n\nexport function generateConstructorDataset(sortedConstructors) {\n  // Generate chart data for the Constructor's Championship.\n  const seasonDataset = [];\n  sortedConstructors.forEach((constructor) => {\n    const constructorData = {\n      label: constructor[0],\n      data: Object.values(constructor[1]).map((stats) => stats.currentPoints)\n    }\n    seasonDataset.push(constructorData);\n  });\n  return seasonDataset;\n}\n\nexport function generateSingleDriverData(singleDriver) {\n  // Generate chart data for the Driver Detail view.\n  const driverName = singleDriver[0];\n  let driverData = Object.values(singleDriver[1])\n  driverData = driverData.slice(0, driverData.length - 1)\n  const qualiDataset = {\n    label: \"Qualifying\",\n    data: driverData.map((race) => race.qualiPosition),\n  }\n  const raceDataset = {\n    label: \"Race Finish\",\n    data: driverData.map((race) => race.finishPosition),\n  }\n  return [qualiDataset, raceDataset];\n}\n\nexport function computeConstructorPoints(response, startDate, endDate) {\n  const races = response.MRData.RaceTable.Races;\n  const constructors = {};\n  races.forEach((race) => {\n    // Optionally filter out races if start and end dates are given.\n    if (startDate) {\n      const raceDate = new Date(race.date);\n      const startFilter = new Date(startDate);\n      const endFilter = new Date(endDate);\n      if (raceDate.getFullYear() === startFilter.getFullYear()) {\n        if (raceDate < startFilter || raceDate > endFilter) {\n          return;\n        }\n      }\n    }\n    const raceName = race.raceName;\n    const round = race.round;\n    race.Results.forEach((raceResult) => {\n      const constructor = raceResult.Constructor.name;\n      // Create default entries if they don't exist.\n      if (!constructors[constructor]) constructors[constructor] = {};\n      if (!constructors[constructor][\"pointsTotal\"]) constructors[constructor][\"pointsTotal\"] = 0;\n      // We'll use finish and quali in the driver detail view.\n      constructors[constructor][\"pointsTotal\"] += parseInt(raceResult.points);\n      // Each team has two drivers\n      if (constructors[constructor][round]) {\n        constructors[constructor][round][\"points\"] += raceResult.points\n      }\n      constructors[constructor][round] = {\n        \"raceName\": raceName,\n        \"points\": raceResult.points,\n        \"currentPoints\": constructors[constructor][\"pointsTotal\"],\n        \"date\": race.date\n      }\n    })\n  })\n  /*\n  Sort constructors by total points. Returns an array with 2 element subarrays.\n  The first element is the team name and the second element is the full\n  constructor's results.\n  */\n  return Object.entries(constructors)\n    .sort(([, raceA], [, raceB]) => raceB.pointsTotal - raceA.pointsTotal);;\n}\n","import * as parsingFunctions from './parsing-functions';\nimport * as tableFunctions from './table-functions';\n\nexport function renderDriverDetail(singleDriver, raceLabels, ctx, backToMain) {\n  const driverName = singleDriver[0]\n  const driverDataset = parsingFunctions.generateSingleDriverData(singleDriver);\n  return tableFunctions.generateSeasonSummary(\n    raceLabels, driverDataset, ctx, backToMain, driverName, \"bar\"\n  )\n}\n\nexport function renderConstructorsTable(jsonData, pageManager, raceLabels, ctx) {\n  const sortedConstructors = parsingFunctions.computeConstructorPoints(\n    jsonData, pageManager.startDate, pageManager.endDate\n  );\n  const title = `Constructor's Championship ${pageManager.season}`;\n  const constructorDataset = parsingFunctions.generateConstructorDataset(sortedConstructors);\n  return tableFunctions.generateConstructorSummary(\n    raceLabels, constructorDataset, ctx, title\n  )\n}\n\nexport function renderDriversTable(sortedDrivers, pageManager, raceLabels, ctx, handleDriverClick) {\n  const driverDataset = parsingFunctions.generateDatasets(sortedDrivers);\n  const title = `Driver's Championship ${pageManager.season}`\n  return tableFunctions.generateSeasonSummary(\n    raceLabels, driverDataset, ctx, handleDriverClick, title\n  )\n}\n"],"names":["grandPrixAbbreviations","localFileSeasons","championship","populateElement","type","text","parent","arguments","length","undefined","eleClass","newElement","document","createElement","innerHTML","appendChild","classList","add","removeAllChildren","elementId","parentElement","getElementById","firstChild","removeChild","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","obj","rgbString","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","generateSeasonSummary","raceLabels","seasonDataset","canvasPosition","StateManager","season","currentChart","startDate","endDate","constants","driverView","driverNum","driverName","championshipToggle","toggleStatus","processDateRange","matchingOkay","alert","findDriver","sortedDrivers","driver","clearDriverView","pageManager","filtersForm","querySelector","seasonSelection","instructionsMenu","explainerButton","explainerModal","explainerClose","backToMainButton","tableRefresh","checked","populatePage","handleDriverClick","_","backToMain","async","jsonData","localStorage","getItem","log","response","fetch","json","errorResponse","parsingFunctions","url","headers","setItem","races","MRData","RaceTable","Races","drivers","race","raceDate","startFilter","endFilter","getFullYear","raceName","Results","raceResult","Driver","givenName","familyName","_ref","_ref2","raceA","raceB","pointsTotal","uniqueRaces","utils","optionText","startOption","endOption","singleDriver","driverDataset","driverData","qualiPosition","finishPosition","tableFunctions","chartFunctions","sortedConstructors","constructors","Constructor","_ref3","_ref4","constructorDataset","constructorData","stats","currentPoints","thead","header","raceShortName","tbody","roundStart","driverStats","finishPos","pointsTable","childNodes","child","onclick","preventDefault","instructionsList","seasonOptions","currentYear","yearOption"],"sourceRoot":""}